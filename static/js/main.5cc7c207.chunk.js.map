{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","components/hooks/LocalStorage.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","validateForm","onAdd","useState","state","setState","handelChangeForm","target","value","prevState","resetForm","onSubmit","e","preventDefault","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","id","uuid","error","className","s","form","htmlFor","input","type","placeholder","onChange","button","defaultProps","contacts","ContactListItem","onRemove","onClick","ContactsList","length","map","contact","Filter","filter","App","setFilter","key","defaultValue","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","LocalStorage","setContacts","console","log","filterContacts","useMemo","toLowerCase","startsWith","newContact","prevContacts","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cc7c207.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__310Et\",\"App-logo\":\"App_App-logo__2dwoP\",\"App-logo-spin\":\"App_App-logo-spin__2NNty\",\"App-header\":\"App_App-header__3U0xt\",\"App-link\":\"App_App-link__2rkJ8\"};","import React, { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport default function ContactForm({ validateForm, onAdd }) {\r\n  const [state, setState] = useState({ ...INITIAL_STATE });\r\n  const { name, number } = state;\r\n\r\n  const handelChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handelFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (validateForm(name) != null) {\r\n      toast.warn(name + \" is already in contacts.\", {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (!name || !number) {\r\n      toast.error(\"Some field is empty\", {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    onAdd({ id: uuid(), name: name, number: number });\r\n\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n    return (\r\n        <form onSubmit={handelFormSubmit} className={s.form}>\r\n          <label htmlFor=\"name_1\">Name</label>\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name_1\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={handelChangeForm}\r\n          />\r\n          <label htmlFor=\"number_1\">Number</label>\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            id=\"number_1\"\r\n            placeholder=\"Enter phone number\"\r\n            value={number}\r\n            onChange={handelChangeForm}\r\n          />\r\n          <button className={s.button} type=\"submit\">\r\n            Add Contact\r\n          </button>\r\n          <ToastContainer />\r\n        </form>\r\n    );\r\n  \r\n}\r\n\r\nContactForm.defaultProps = {\r\n  contacts: [],\r\n  validateForm: () => {},\r\n  onAdd: () => {},\r\n};\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  validateForm: PropTypes.func,\r\n  onAdd: PropTypes.func,\r\n};\r\n","const ContactListItem = ({ id, name, number, onRemove }) => {\r\n  return (\r\n    <>\r\n      {name}: {number}\r\n      <button onClick={() => onRemove(id)}>Delete</button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id}>\r\n          <ContactListItem {...contact} onRemove={onRemove} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={({ target }) => onChange(target.value)}\r\n      placeholder=\"Enter name for Search\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useMemo, useState } from \"react\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter/Filter\";\nimport LocalStorage from \"./components/hooks\";\nimport s from \"./App.module.css\";\n\nexport default function App() {\n  const [filter, setFilter] = useState(\"\");\n  const [contacts, setContacts] = LocalStorage(\"contacts\", []);\n\n  console.log(contacts);\n\n  const AddContact = (newContact) => {\n    setContacts((prevContacts) => [...prevContacts, newContact]);\n  };\n\n  const checkUnique = (name) => {\n    return contacts.find((contact) => {\n      return contact.name === name;\n    });\n  };\n\n  const removeContact = (id) =>\n    setContacts((prevContacts) => [\n      ...prevContacts.filter((contact) => contact.id !== id),\n    ]);\n\n  const filterContacts = useMemo(() => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().startsWith(filter.toLowerCase())\n    );\n  }, [filter, contacts]);\n \n  return (\n    <div className={s.App}>\n      <h1>Phone book</h1>\n      <ContactForm onAdd={AddContact} validateForm={checkUnique} />\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChange={(state) => setFilter(state)} />\n      <ContactsList contacts={filterContacts} onRemove={removeContact} />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\r\n\r\n\r\nexport default function LocalStorage (key, defaultValue = \"\") {\r\n    const [state, setState] = useState(() => {\r\n        return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\r\n    })\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(state))\r\n    }, [key, state])\r\n\r\n    return [state, setState]\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2G5Z8\",\"input\":\"ContactForm_input__2zuJQ\",\"button\":\"ContactForm_button__3XNP6\"};"],"sourceRoot":""}